###############################################################################
#
#   GitHub Actions CI configuration for integration tests
#
#   AUTHOR: Maciej_Bak
#   AFFILIATION: University_of_Basel
#   AFFILIATION: Swiss_Institute_of_Bioinformatics
#   CONTACT: maciej.bak@unibas.ch
#   CREATED: 14-12-2021
#   LICENSE: Apache_2.0
#
###############################################################################
---

name: integration

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main

jobs:

  PQA-module:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout mapp repository
        uses: actions/checkout@v2

      - name: Setup miniconda & mapp main environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          environment-file: env/environment.yml
          activate-environment: mapp
          auto-activate-base: false

      - name: Display all miniconda & env info
        run: |
          conda info -a
          conda list

      - name: Create snakemake DAG
        run: |
          bash execution/run.sh \
          -c .test/integration/module_PQA/config.yml \
          -e local \
          -t conda \
          -g dag dag.svg

      - name: Initiate snakemake dry run
        run: |
          snakemake \
          --snakefile=Snakefile \
          --configfile=.test/integration/module_PQA/config.yml \
          --printshellcmds \
          --dryrun \
          --verbose

      - name: Build conda envs for all the rules
        run: |
          snakemake \
          --snakefile=Snakefile \
          --configfile=.test/integration/module_PQA/config.yml \
          --use-conda \
          --conda-create-envs-only \
          --cores 8

  ASE-module:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout mapp repository
        uses: actions/checkout@v2

      - name: Setup miniconda & mapp main environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          environment-file: env/environment.yml
          activate-environment: mapp
          auto-activate-base: false

      - name: Display all miniconda & env info
        run: |
          conda info -a
          conda list

      - name: Create snakemake DAG
        run: |
          bash execution/run.sh \
          -c .test/integration/module_ASE/config.yml \
          -e local \
          -t conda \
          -g dag dag.svg

      - name: Initiate snakemake dry run
        run: |
          snakemake \
          --snakefile=Snakefile \
          --configfile=.test/integration/module_ASE/config.yml \
          --printshellcmds \
          --dryrun \
          --verbose

      - name: Build conda envs for all the rules
        run: |
          snakemake \
          --snakefile=Snakefile \
          --configfile=.test/integration/module_ASE/config.yml \
          --use-conda \
          --conda-create-envs-only \
          --cores 8

  TPA-module:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout mapp repository
        uses: actions/checkout@v2

      - name: Setup miniconda & mapp main environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          environment-file: env/environment.yml
          activate-environment: mapp
          auto-activate-base: false

      - name: Display all miniconda & env info
        run: |
          conda info -a
          conda list

      - name: Create snakemake DAG
        run: |
          bash execution/run.sh \
          -c .test/integration/module_TPA/config.yml \
          -e local \
          -t conda \
          -g dag dag.svg

      - name: Initiate snakemake dry run
        run: |
          snakemake \
          --snakefile=Snakefile \
          --configfile=.test/integration/module_TPA/config.yml \
          --printshellcmds \
          --dryrun \
          --verbose

      - name: Build conda envs for all the rules
        run: |
          snakemake \
          --snakefile=Snakefile \
          --configfile=.test/integration/module_TPA/config.yml \
          --use-conda \
          --conda-create-envs-only \
          --cores 8

...
